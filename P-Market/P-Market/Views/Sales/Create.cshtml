@model P_Market.Models.ViewModels.SaleViewModel

@{
    ViewBag.Title = "Nueva Venta";
}

<h2>@ViewBag.Title</h2>
<hr />

<!-- INICIO DE FORMULARIO -->
@using (Html.BeginForm("Create", "Sales", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @* INICIO DE ELEMENTOS DE CLIENTE *@
        <div class="panel panel-default">
            <div class="panel-heading">
                Cliente
            </div>
            <div class="panel-body">
                <div class="col-xs-2">
                    @Html.EditorFor(model => model.ClientKey, new
                    {
                        htmlAttributes = new { @class = "form-control", placeholder = "Id" }
                    })
                    @Html.ValidationMessageFor(model => model.ClientKey, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-5">
                    @Html.EditorFor(model => model.ClientName, new
                    {
                        htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "Nombre" }
                    })

                </div>
            </div>
        </div>
        @* FIN DE ELEMENTOS DE CLIENTE *@
        @* INICIO DE ELEMENTOS DEL PRODUCTO *@
        <div class="panel panel-default">
            <div class="panel-heading">
                Producto
            </div>
            <div class="panel-body">

                <div class="col-xs-2">
                    <input type="number" class="form-control" name="ProductId" id="ProductId" value="" placeholder="Id" />
                </div>

                <div class="col-xs-3">
                    <input type="text" class="form-control" name="ProductName" id="ProductName" value="" placeholder="Nombre" />
                </div>

                <div class="col-xs-2">
                    <input type="text" class="form-control" name="ProductPrice" id="ProductPrice" value="" placeholder="Precio" />
                </div>

                <div class="col-xs-2">
                    <input type="text" class="form-control" name="ProductQuantity" id="ProductQuantity" value="" placeholder="Cantidad" />
                </div>

                <div class="col-xs-2">
                    <input type="button" class="btn btn-default" onclick="AddProduct(); return false;" value="Agregar" />
                </div>

            </div>
        </div>
        @* FIN DE ELEMENTOS DEL PRODUCTO *@

        @* INICIO DE TABLA DE PRODUCTOS DE LA VENTA *@
    <div id="SaleDetails">
        <table id="table" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Producto</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                    <th>Total</th>
                    <th>Opciones</th>
                </tr>
            </thead>
            <tbody id="tblProducts">
                @*<tr>
                    <td>2</td>
                    <td>Laptop DELL XPS</td>
                    <td>18000</td>
                    <td>1</td>
                    <td>18000</td>
                    <td></td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>Rollo de cable Azul Belden</td>
                    <td>6500</td>
                    <td>2</td>
                    <td>13000</td>
                    <td></td>
                </tr>*@
            </tbody>
        </table>

        @* INICIO DE ELEMENTO HIDDEN *@

        @*<input type="hidden" name="SaleDetails.Index" id="SaleDetails.Index" value="0" />
        <input type="hidden" name="SaleDetails[0].ProductId" id="SaleDetails[0].ProductId" value="2" />
        <input type="hidden" name="SaleDetails[0].ProductName" id="SaleDetails[0].ProductName" value="Laptop DELL XPS" />
        <input type="hidden" name="SaleDetails[0].ProductPrice" id="SaleDetails[0].ProductPrice" value="18000" />
        <input type="hidden" name="SaleDetails[0].ProductQuantity" id="SaleDetails[0].ProductQuantity" value="1" />

        <input type="hidden" name="SaleDetails.Index" id="SaleDetails.Index" value="1" />
        <input type="hidden" name="SaleDetails[1].ProductId" id="SaleDetails[1].ProductId" value="3" />
        <input type="hidden" name="SaleDetails[1].ProductName" id="SaleDetails[1].ProductName" value="Rollo de cable Azul Belden" />
        <input type="hidden" name="SaleDetails[1].ProductPrice" id="SaleDetails[1].ProductPrice" value="6500" />
        <input type="hidden" name="SaleDetails[1].ProductQuantity" id="SaleDetails[1].ProductQuantity" value="2" />
        *@
        @* FIN DE ELEMENTO HIDDEN *@

    </div>
        @* FIN DE TABLA DE PRODUCTOS DE LA VENTA *@

        <div class="form-group">
            <div class="col-xs-6">
                <input type="submit" value="Guardar" class="btn btn-warning" />
                <a href="index" class="btn btn-default">Regresar</a>
            </div>
        </div>

    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    let num = 0;
    function AddProduct() {
        //alert("Hola desde botón agregar");

        if (ValidProduct()) {

            //Capturar campos del formulario de producto
            let ProductId = document.getElementById("ProductId").value;
            let ProductName = document.getElementById("ProductName").value;
            let ProductPrice = document.getElementById("ProductPrice").value;
            let ProductQuantity = document.getElementById("ProductQuantity").value;
            let ProductTotal = parseFloat(ProductPrice) * parseFloat(ProductQuantity);

            //console.log(ProductTotal);

            //Agregar datos a tabla html
            let table = document.getElementById("tblProducts");

            let tr = document.createElement("tr");

            let tdId = document.createElement("td");
            let tdName = document.createElement("td");
            let tdPrice = document.createElement("td");
            let tdQuantity = document.createElement("td");
            let tdTotal = document.createElement("td");
            let tdOptions = document.createElement("td");

            tr.appendChild(tdId);
            tr.appendChild(tdName);
            tr.appendChild(tdPrice);
            tr.appendChild(tdQuantity);
            tr.appendChild(tdTotal);
            tr.appendChild(tdOptions);

            let button = document.createElement("input");
            button.type = "button";
            button.value = "Borrar";
            button.id = "b_row" + num;
            button.className = "btn btn-default btn-sm";
            button.addEventListener('click', function () {
                
                let str = this.id;
                let res = str.substring(5, str.length); 

                if (deleteRow(this)) {
                    deleteHidden(res);
                }

            }, false);

            tdOptions.appendChild(button);

            tdId.innerHTML = ProductId;
            tdName.innerHTML = ProductName;
            tdPrice.innerHTML = ProductPrice;
            tdQuantity.innerHTML = ProductQuantity;
            tdTotal.innerHTML = ProductTotal;

            tr.id = "row_" + num;

            table.appendChild(tr);

            /*HIDDENS*/

            let SaleDetails = document.getElementById("SaleDetails");
            let HiddenIndex = document.createElement("input");
            let HiddenProductId = document.createElement("input");
            let HiddenProductName = document.createElement("input");
            let HiddenProductPrice = document.createElement("input");
            let HiddenProductQuantity = document.createElement("input");

            HiddenIndex.name = "SaleDetails.Index";
            HiddenIndex.id = "SaleDetails.Index" + num;
            HiddenIndex.value = num;
            HiddenIndex.type = "hidden";
            HiddenIndex.className += "Indexlist" + num;

            HiddenProductId.name = "SaleDetails[" + num + "].ProductId";
            HiddenProductId.id = "SaleDetails[" + num + "].ProductId";
            HiddenProductId.value = ProductId;
            HiddenProductId.type = "hidden";
            
            HiddenProductName.name = "SaleDetails[" + num + "].ProductName";
            HiddenProductName.id = "SaleDetails[" + num + "].ProductName";
            HiddenProductName.value = ProductName;
            HiddenProductName.type = "hidden";

            HiddenProductPrice.name = "SaleDetails[" + num + "].ProductPrice";
            HiddenProductPrice.id = "SaleDetails[" + num + "].ProductPrice";
            HiddenProductPrice.value = ProductPrice;
            HiddenProductPrice.type = "hidden";

            HiddenProductQuantity.name = "SaleDetails[" + num + "].ProductQuantity";
            HiddenProductQuantity.id = "SaleDetails[" + num + "].ProductQuantity";
            HiddenProductQuantity.value = ProductQuantity;
            HiddenProductQuantity.type = "hidden";

            SaleDetails.appendChild(HiddenIndex);
            SaleDetails.appendChild(HiddenProductId);
            SaleDetails.appendChild(HiddenProductName);
            SaleDetails.appendChild(HiddenProductPrice);
            SaleDetails.appendChild(HiddenProductQuantity);

            document.getElementById("ProductId").value = "";
            document.getElementById("ProductName").value = "";
            document.getElementById("ProductPrice").value = "";
            document.getElementById("ProductQuantity").value = "";

            num++;

        } else {
            alert("ERROR: Faltan datos del producto");
        }


    }

    function ValidProduct() {
        let valid = true;
        let fProductId = document.getElementById("ProductId").value;
        let fProductQuantity = document.getElementById("ProductQuantity").value;

        if (fProductId.length == 0 || fProductQuantity.length == 0) {
            valid = false;
        }
        return valid;
    }

    function deleteRow(button) {

        let row = button.parentNode.parentNode;
        let name = row.getElementsByTagName("td")[1].innerHTML;
        if (confirm("Quiere eliminar este registro: " + name)) {
            //Obtener referencia de la tabla
            let table = document.getElementById("table");

            //Borrar fila de la tabla
            table.deleteRow(row.rowIndex);

            return true;
        }

        return false;
    }

    function deleteHidden(r) {
        let vProductId = document.getElementById("SaleDetails[" + r + "].ProductId");
        let vProductName = document.getElementById("SaleDetails[" + r + "].ProductName");
        let vProductPrice = document.getElementById("SaleDetails[" + r + "].ProductPrice");
        let vProductQuantity = document.getElementById("SaleDetails[" + r + "].ProductQuantity");
        let vSaleDetailsIndex = document.getElementById("SaleDetails.Index" + r);

        vProductId.remove();
        vProductName.remove();
        vProductPrice.remove();
        vProductQuantity.remove();
        vSaleDetailsIndex.remove();


    }

</script>